FEATURE LIST FOR v1.2
=====================
1.  Create a UUID, Rating, BlowFishHash and Md5Hash Property
2.  Write JSON Serialization and Deserialization
3.  Write the collections package and move Map, List and Set to that package. Write
3.1 Write the pattern option for String,
3.2 Change the type of URL to str : Done
3.3 Write counter implementation.
4.  Default Properties for all Models, 

+ Write CollectionReference(), to create eventually consistent collections like Mappings, lists and sets.
  possibly the easiest way to do this is by making each Property to do its own part in creation and persistence.



'''
DESIGN SCRIPT
Styles for Default Types:
An Extensible Wide Row; with inbuilt default validation and serialization
'''

@key("id")
class Profile(Model):
    '''Basic Extensible Wide Row'''
    id = UUID()
    bookmarks = Map(String, URL)
    default = Default(Basic, Integer)


Or:  

@key("id")
class Profile(Model):
    '''Basic Extensible Wide Row'''
    id = UUID()
    bookmarks = Map(String, URL)
    
    @property
    def default(self):
        '''Converters for Dynamic Properties'''
        return Basic, Integer
