FEATURE LIST
============
1. Do automatic conversion for parameters to model.query() ::: Done
2. Create a threading.lock object for the global variables in the db module. ::: Done
3. Think about issues regarding having a global consistency level. ::: Done

Book.query(name="War and Peace", author="Tolstoy")
'''
DESIGN SCRIPT
Styles for Default Types:
An Extensible Wide Row; with inbuilt default validation and serialization
'''

@key("id")
class Profile(Model):
    '''Basic Extensible Wide Row'''
    id = UUID()
    bookmarks = Map(String, URL)
    default = Default(Basic, Integer)

Or:  

@key("id")
class Profile(Model):
    '''Basic Extensible Wide Row'''
    id = UUID()
    bookmarks = Map(String, URL)
    
    @property
    def default(self):
        '''Converters for Dynamic Properties'''
        return Basic, Integer

##
# ALTERNATIVE IMPLEMENTATION OFF ECC'S (Eventually constistent collections)
# USING MODELING
##
@key("id")
class Bookmark(Model):
    '''A Ton of Model Preferences'''
    id = UUID()
    default = Default(String, URL)


@key('id')
class User(Model):
    '''Model for a User account'''
    id = UUID()
    avatar = Blob()
    name = String("Gandhi")
    bookmark = Reference(Bookmark)
    
