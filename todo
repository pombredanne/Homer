FEATURE LIST FOR v1.2
=====================
1. Create a UUID, Rating, BlowFishHash and Md5Hash Property
2. Write JSON Serialization and Deserialization
4. Default Properties for all Models, 

+ Write CollectionReference(), to create eventually consistent collections like Mappings, lists and sets.
  possibly the easiest way to do this is by making each Property to do its own part in creation and persistence.



'''
DESIGN SCRIPT
Styles for Default Types:
An Extensible Wide Row; with inbuilt default validation and serialization
'''

Basic = String(pattern="{Email Regular Expression Here}", length= 50)

@key("id")
class Profile(Model):
    '''Basic Extensible Wide Row'''
    id = UUID()
    bookmarks = Map(Basic, URL)
    default = Default(Basic, Integer)


Or:  

@key("id")
class Profile(Model):
    '''Basic Extensible Wide Row'''
    id = UUID()
    bookmarks = Map(Basic, URL)
    
    @property
    def default(self):
        '''Converters for Dynamic Properties'''
        return Basic, Integer
    
Depending on how you intend to use this. For this to work I have to remove all the 
regularize the method signature for deconvert and convert, effectively making them
inpersonal to class. All the other functionality would remain unaffected...
